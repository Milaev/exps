//команды

document.querySelector('.сlass'); // выбирает в разметке первый пункт с нужным классом
document.querySelectorAll('.class'); //найдёт все элементы на странице с таким классом, потому что просто квериселектор возвращает только 1ый элемент на странице.
console.log('что-то'); //выводит в консоль сообщение "что-то"
элемент.classList.remove('class'); //убирает класс у элемента
элемент.classList.add('class'); //добавляет класс элементу
элемент.classList.toggle('class'); //убирает класс у элемента, если он есть и добавляет класс, если его нет
элемент.classList.contains('class') //метод вернет true or false - в зависимости есть ли у элемента класс, указанный в скобках

let news = document.querySelector('.news'); //задаем переменную news куда кладем значения тега с классом .news
console.log(news.textContent); //выводим в консоль текстовое содержание тега с классом .news

document.createElement('имя тега'); // создаёт тег на странице, куда подключен скрипт
элемент-родитель.append(добавляемыйЭлемент); //Метод append добавляет указанный в скобках элемент в конец элемента-родителя.
// При этом содержимое элемента-родителя не затирается.

элемент.disabled = true; //можем задавать командой дизаблед блокировку кнопки отправки формы при опр условиях, если поместить внутрь условия

//__________________________________________________________________________________________________________________________________________________________
let articles = document.querySelectorAll('.news-block'); //нашли все блоки с новостями и положили в переменную

for (let article of articles) {													
  if (article.dataset.category === 'cats') {					//для каждой артикл из коллекции артиклес если атрибут в разметке data-category="cats" добавить класс хайлайт
  article.classList.add('highlight');
  }
}


//Чтобы получить все стили, которые применяются к элементу, используйте метод 
window.getComputedStyle


//________________________________________________________________________________________________________________________________________________________
//обработчики событий

button.onclick = function() { //онклик это обработчик событий по клику на элемент(в данном случае .button)
	console.log('что-то'); //после клика по .button в консоль выведется что-то
}

form.onsubmit = function() { //онсабмит это обработчик событий при отправке формы
	console.log('что-то'); //после отправки формы в консоль выведется что-то
}

let button = document.querySelector('.button');
button.addEventListener('click', function () {
  // Инструкции
});

link.addEventListener('click', function(evt) {
  // Отменяем действие по умолчанию
  evt.preventDefault();
});

let variable = document.querySelector('элемент'); //создали переменную и положили туда элемент с классом элемент.(например инпут или текстареа)
variable.oninput = function () {
	console.log(variable.value);   	//метод онинпут показывает посимвольно обновления при вводе текста в нашем элементе и выводит в консоль, без отправки формы.
}

variable.oninput = function () {
  variable_2.textContent = variable.value.length;  //метод выведем в поле с классом variable_2 кол-во символов введеных в поле.
};

window.onscroll = function () {       //обработчик скролла страницы
  console.log('Страница прокручена');
}

console.log(window.scrollY); //покажет на сколько пикселей прокрутили страницу вниз
window.scrollTo(100, 50); // Прокрутит страницу на 100px вправо и на 50px вниз


// Находим выпадающий список
let select = document.querySelector('select');
// Выводим значение в консоль
console.log(select.value);
// Добавляем обработчик событий, который срабатывает, когда пользователь выбирает новое значение из выпадающего списка.
select.onchange = function () {
  // Выводим в консоль новое значение
  console.log(select.value);
};


// Чтобы отслеживать изменения в поле ввода, можно использовать обработчики onchange и oninput. Разница между ними заключается в следующем:
onchange  //срабатывает, если значение поля ввода изменилось и пользователь закончил ввод. Например, если пользователь передвинул ползунок и отпустил его.
//Или ввёл что-то в текстовое поле и убрал из него курсор.
oninput // срабатывает на каждое изменение значения, независимо от того, завершил пользователь ввод или нет. Например, он сработает на каждое изменение положения ползунка,
//даже если пользователь продолжает его двигать.И на каждый новый символ в текстовом поле, даже если пользователь продолжает вводить текст.